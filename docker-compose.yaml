version: "2.4"

services:
  builder:
    image: maven:3.6.3-adoptopenjdk-15
    container_name: flink-builder
    working_dir: /workspace
    volumes:
      - ./:/workspace
    command: >
      bash -c "
        rm -f job/my-job.jar job/.built.ok &&
        mvn clean package &&
        mkdir -p job &&
        cp target/flink-wordcount-1.0-jar-with-dependencies.jar job/my-job.jar &&
        touch job/.built.ok &&
        echo '‚úÖ Built my-job.jar' &&
        tail -f /dev/null
      "
    healthcheck:
      test: ["CMD", "bash", "-c", "test -f /workspace/job/.built.ok"]
      interval: 5s
      timeout: 2s
      retries: 20
    restart: on-failure
    networks:
      - flink-net
  dynamodb-local:
    image: amazon/dynamodb-local:latest
    container_name: dynamodb-local
    # no volumes or tmpfs‚Äîrun entirely in memory
    ports:
      - "8000:8000"
    entrypoint:
      - sh
      - -c
      - |
        echo "üóÑÔ∏è Starting DynamoDB Local in inMemory mode"
        java -jar DynamoDBLocal.jar -sharedDb -inMemory -port 8000
    networks:
      - flink-net


  init-dynamodb:
    image: amazon/aws-cli:2.11.0
    container_name: init-dynamodb
    depends_on:
      - dynamodb-local
    environment:
      AWS_ACCESS_KEY_ID:     fakeMyKeyId
      AWS_SECRET_ACCESS_KEY: fakeSecretAccessKey
      AWS_REGION:            fakeRegion
    entrypoint:
      - sh
      - -c
      - |
        echo '‚è≥ Waiting for DynamoDB Local‚Ä¶'
        until aws dynamodb list-tables --endpoint-url http://dynamodb-local:8000; do
          sleep 1
        done

        echo 'üöÄ Creating WordCount table (if not exists)‚Ä¶'
        aws dynamodb create-table \
          --table-name WordCount \
          --attribute-definitions AttributeName=word,AttributeType=S \
          --key-schema AttributeName=word,KeyType=HASH \
          --provisioned-throughput ReadCapacityUnits=5,WriteCapacityUnits=5 \
          --endpoint-url http://dynamodb-local:8000 \
        || echo 'Table already exists.'

        echo '‚úÖ Table initialized.'
    networks:
      - flink-net

  jobmanager:
    image: flink:1.20.1-scala_2.12-java11
    container_name: flink-jobmanager
    depends_on:
      - builder
      - dynamodb-local
      - init-dynamodb
    ports:
      - "8081:8081"
    volumes:
      - ./job:/job
    environment:
      JOB_MANAGER_RPC_ADDRESS: jobmanager
      AWS_ACCESS_KEY_ID: fakeMyKeyId
      AWS_SECRET_ACCESS_KEY: fakeSecretAccessKey
      AWS_REGION: fakeRegion
      DYNAMODB_ENDPOINT: http://dynamodb-local:8000
    command: >
      bash -c "
        echo '‚è≥ Waiting for builder marker‚Ä¶' &&
        until [ -f /job/.built.ok ]; do sleep 1; done &&
        echo 'üöÄ Starting Flink cluster‚Ä¶' &&
        start-cluster.sh &&
        echo '‚ñ∂ Submitting job‚Ä¶' &&
        flink run /job/my-job.jar &&
        tail -f /dev/null
      "
    networks:
      - flink-net

  taskmanager:
    image: flink:1.20.1-scala_2.12-java11
    container_name: flink-taskmanager
    depends_on:
      - jobmanager
    environment:
      JOB_MANAGER_RPC_ADDRESS: jobmanager
      AWS_ACCESS_KEY_ID: fakeMyKeyId
      AWS_SECRET_ACCESS_KEY: fakeSecretAccessKey
      AWS_REGION: fakeRegion
      DYNAMODB_ENDPOINT: http://dynamodb-local:8000
    command: taskmanager
    networks:
      - flink-net

volumes:
  dynamodb-data:

networks:
  flink-net:
    driver: bridge
